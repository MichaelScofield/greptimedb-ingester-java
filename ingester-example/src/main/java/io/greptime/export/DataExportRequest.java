// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: export.proto

package io.greptime.export;

/**
 * Protobuf type {@code DataExportRequest}
 */
public final class DataExportRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:DataExportRequest)
    DataExportRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DataExportRequest.newBuilder() to construct.
  private DataExportRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DataExportRequest() {
    catalog_ = "";
    schema_ = "";
    tables_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    filePath_ = "";
    fileName_ = "";
    compressionType_ = 0;
    taskId_ = "";
    blackList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DataExportRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.greptime.export.Export.internal_static_DataExportRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.greptime.export.Export.internal_static_DataExportRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.greptime.export.DataExportRequest.class, io.greptime.export.DataExportRequest.Builder.class);
  }

  private int bitField0_;
  public static final int CATALOG_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object catalog_ = "";
  /**
   * <code>string catalog = 1;</code>
   * @return The catalog.
   */
  @java.lang.Override
  public java.lang.String getCatalog() {
    java.lang.Object ref = catalog_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      catalog_ = s;
      return s;
    }
  }
  /**
   * <code>string catalog = 1;</code>
   * @return The bytes for catalog.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCatalogBytes() {
    java.lang.Object ref = catalog_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      catalog_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SCHEMA_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object schema_ = "";
  /**
   * <code>string schema = 2;</code>
   * @return The schema.
   */
  @java.lang.Override
  public java.lang.String getSchema() {
    java.lang.Object ref = schema_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      schema_ = s;
      return s;
    }
  }
  /**
   * <code>string schema = 2;</code>
   * @return The bytes for schema.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSchemaBytes() {
    java.lang.Object ref = schema_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      schema_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TABLES_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList tables_;
  /**
   * <code>repeated string tables = 3;</code>
   * @return A list containing the tables.
   */
  public com.google.protobuf.ProtocolStringList
      getTablesList() {
    return tables_;
  }
  /**
   * <code>repeated string tables = 3;</code>
   * @return The count of tables.
   */
  public int getTablesCount() {
    return tables_.size();
  }
  /**
   * <code>repeated string tables = 3;</code>
   * @param index The index of the element to return.
   * @return The tables at the given index.
   */
  public java.lang.String getTables(int index) {
    return tables_.get(index);
  }
  /**
   * <code>repeated string tables = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the tables at the given index.
   */
  public com.google.protobuf.ByteString
      getTablesBytes(int index) {
    return tables_.getByteString(index);
  }

  public static final int FILE_PATH_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object filePath_ = "";
  /**
   * <pre>
   *&#47; The file path to export data.
   * </pre>
   *
   * <code>string file_path = 4;</code>
   * @return The filePath.
   */
  @java.lang.Override
  public java.lang.String getFilePath() {
    java.lang.Object ref = filePath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      filePath_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *&#47; The file path to export data.
   * </pre>
   *
   * <code>string file_path = 4;</code>
   * @return The bytes for filePath.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFilePathBytes() {
    java.lang.Object ref = filePath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      filePath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FILE_NAME_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object fileName_ = "";
  /**
   * <pre>
   *&#47; The name of the zip file to export.
   * </pre>
   *
   * <code>string file_name = 5;</code>
   * @return The fileName.
   */
  @java.lang.Override
  public java.lang.String getFileName() {
    java.lang.Object ref = fileName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      fileName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *&#47; The name of the zip file to export.
   * </pre>
   *
   * <code>string file_name = 5;</code>
   * @return The bytes for fileName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFileNameBytes() {
    java.lang.Object ref = fileName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      fileName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MIN_TIMESTAMP_MS_FIELD_NUMBER = 6;
  private long minTimestampMs_ = 0L;
  /**
   * <pre>
   *&#47; The min timestamp of the data to export.
   * </pre>
   *
   * <code>optional int64 min_timestamp_ms = 6;</code>
   * @return Whether the minTimestampMs field is set.
   */
  @java.lang.Override
  public boolean hasMinTimestampMs() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   *&#47; The min timestamp of the data to export.
   * </pre>
   *
   * <code>optional int64 min_timestamp_ms = 6;</code>
   * @return The minTimestampMs.
   */
  @java.lang.Override
  public long getMinTimestampMs() {
    return minTimestampMs_;
  }

  public static final int MAX_TIMESTAMP_MS_FIELD_NUMBER = 7;
  private long maxTimestampMs_ = 0L;
  /**
   * <pre>
   *&#47; The max timestamp of the data to export.
   * </pre>
   *
   * <code>optional int64 max_timestamp_ms = 7;</code>
   * @return Whether the maxTimestampMs field is set.
   */
  @java.lang.Override
  public boolean hasMaxTimestampMs() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   *&#47; The max timestamp of the data to export.
   * </pre>
   *
   * <code>optional int64 max_timestamp_ms = 7;</code>
   * @return The maxTimestampMs.
   */
  @java.lang.Override
  public long getMaxTimestampMs() {
    return maxTimestampMs_;
  }

  public static final int COMPRESSION_TYPE_FIELD_NUMBER = 8;
  private int compressionType_ = 0;
  /**
   * <pre>
   *&#47; The compression type of the exported zip file.
   * </pre>
   *
   * <code>.CompressionType compression_type = 8;</code>
   * @return The enum numeric value on the wire for compressionType.
   */
  @java.lang.Override public int getCompressionTypeValue() {
    return compressionType_;
  }
  /**
   * <pre>
   *&#47; The compression type of the exported zip file.
   * </pre>
   *
   * <code>.CompressionType compression_type = 8;</code>
   * @return The compressionType.
   */
  @java.lang.Override public io.greptime.export.CompressionType getCompressionType() {
    io.greptime.export.CompressionType result = io.greptime.export.CompressionType.forNumber(compressionType_);
    return result == null ? io.greptime.export.CompressionType.UNRECOGNIZED : result;
  }

  public static final int COMPRESSION_LEVEL_FIELD_NUMBER = 9;
  private int compressionLevel_ = 0;
  /**
   * <pre>
   *&#47; The compression level of the exported zip file.
   * </pre>
   *
   * <code>int32 compression_level = 9;</code>
   * @return The compressionLevel.
   */
  @java.lang.Override
  public int getCompressionLevel() {
    return compressionLevel_;
  }

  public static final int COMPRESSION_INTERVAL_MS_FIELD_NUMBER = 10;
  private long compressionIntervalMs_ = 0L;
  /**
   * <pre>
   *&#47; Compressing a certain amount of data. Because the main CPU cost of data
   * / export comes from compression.
   * / How long to sleep after each compression of data.
   * </pre>
   *
   * <code>uint64 compression_interval_ms = 10;</code>
   * @return The compressionIntervalMs.
   */
  @java.lang.Override
  public long getCompressionIntervalMs() {
    return compressionIntervalMs_;
  }

  public static final int BYTES_PER_COMPRESSION_FIELD_NUMBER = 11;
  private long bytesPerCompression_ = 0L;
  /**
   * <pre>
   *&#47; The number of bytes to compress at a time.
   * </pre>
   *
   * <code>uint64 bytes_per_compression = 11;</code>
   * @return The bytesPerCompression.
   */
  @java.lang.Override
  public long getBytesPerCompression() {
    return bytesPerCompression_;
  }

  public static final int TASK_ID_FIELD_NUMBER = 12;
  @SuppressWarnings("serial")
  private volatile java.lang.Object taskId_ = "";
  /**
   * <pre>
   *&#47; The ID of the continuous incremental data export task. If empty, it is a
   * / normal data export task. If not empty, it is a continuous incremental
   * / data export task.
   * </pre>
   *
   * <code>optional string task_id = 12;</code>
   * @return Whether the taskId field is set.
   */
  @java.lang.Override
  public boolean hasTaskId() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   *&#47; The ID of the continuous incremental data export task. If empty, it is a
   * / normal data export task. If not empty, it is a continuous incremental
   * / data export task.
   * </pre>
   *
   * <code>optional string task_id = 12;</code>
   * @return The taskId.
   */
  @java.lang.Override
  public java.lang.String getTaskId() {
    java.lang.Object ref = taskId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      taskId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *&#47; The ID of the continuous incremental data export task. If empty, it is a
   * / normal data export task. If not empty, it is a continuous incremental
   * / data export task.
   * </pre>
   *
   * <code>optional string task_id = 12;</code>
   * @return The bytes for taskId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTaskIdBytes() {
    java.lang.Object ref = taskId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      taskId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BLACK_LIST_FIELD_NUMBER = 13;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList blackList_;
  /**
   * <pre>
   *&#47; The tables are prohibited from exporting.
   * </pre>
   *
   * <code>repeated string black_list = 13;</code>
   * @return A list containing the blackList.
   */
  public com.google.protobuf.ProtocolStringList
      getBlackListList() {
    return blackList_;
  }
  /**
   * <pre>
   *&#47; The tables are prohibited from exporting.
   * </pre>
   *
   * <code>repeated string black_list = 13;</code>
   * @return The count of blackList.
   */
  public int getBlackListCount() {
    return blackList_.size();
  }
  /**
   * <pre>
   *&#47; The tables are prohibited from exporting.
   * </pre>
   *
   * <code>repeated string black_list = 13;</code>
   * @param index The index of the element to return.
   * @return The blackList at the given index.
   */
  public java.lang.String getBlackList(int index) {
    return blackList_.get(index);
  }
  /**
   * <pre>
   *&#47; The tables are prohibited from exporting.
   * </pre>
   *
   * <code>repeated string black_list = 13;</code>
   * @param index The index of the value to return.
   * @return The bytes of the blackList at the given index.
   */
  public com.google.protobuf.ByteString
      getBlackListBytes(int index) {
    return blackList_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(catalog_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, catalog_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(schema_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, schema_);
    }
    for (int i = 0; i < tables_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, tables_.getRaw(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filePath_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, filePath_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fileName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, fileName_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeInt64(6, minTimestampMs_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeInt64(7, maxTimestampMs_);
    }
    if (compressionType_ != io.greptime.export.CompressionType.Zstd.getNumber()) {
      output.writeEnum(8, compressionType_);
    }
    if (compressionLevel_ != 0) {
      output.writeInt32(9, compressionLevel_);
    }
    if (compressionIntervalMs_ != 0L) {
      output.writeUInt64(10, compressionIntervalMs_);
    }
    if (bytesPerCompression_ != 0L) {
      output.writeUInt64(11, bytesPerCompression_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 12, taskId_);
    }
    for (int i = 0; i < blackList_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 13, blackList_.getRaw(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(catalog_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, catalog_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(schema_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, schema_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < tables_.size(); i++) {
        dataSize += computeStringSizeNoTag(tables_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getTablesList().size();
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filePath_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, filePath_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fileName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, fileName_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(6, minTimestampMs_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(7, maxTimestampMs_);
    }
    if (compressionType_ != io.greptime.export.CompressionType.Zstd.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(8, compressionType_);
    }
    if (compressionLevel_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, compressionLevel_);
    }
    if (compressionIntervalMs_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(10, compressionIntervalMs_);
    }
    if (bytesPerCompression_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(11, bytesPerCompression_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, taskId_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < blackList_.size(); i++) {
        dataSize += computeStringSizeNoTag(blackList_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getBlackListList().size();
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.greptime.export.DataExportRequest)) {
      return super.equals(obj);
    }
    io.greptime.export.DataExportRequest other = (io.greptime.export.DataExportRequest) obj;

    if (!getCatalog()
        .equals(other.getCatalog())) return false;
    if (!getSchema()
        .equals(other.getSchema())) return false;
    if (!getTablesList()
        .equals(other.getTablesList())) return false;
    if (!getFilePath()
        .equals(other.getFilePath())) return false;
    if (!getFileName()
        .equals(other.getFileName())) return false;
    if (hasMinTimestampMs() != other.hasMinTimestampMs()) return false;
    if (hasMinTimestampMs()) {
      if (getMinTimestampMs()
          != other.getMinTimestampMs()) return false;
    }
    if (hasMaxTimestampMs() != other.hasMaxTimestampMs()) return false;
    if (hasMaxTimestampMs()) {
      if (getMaxTimestampMs()
          != other.getMaxTimestampMs()) return false;
    }
    if (compressionType_ != other.compressionType_) return false;
    if (getCompressionLevel()
        != other.getCompressionLevel()) return false;
    if (getCompressionIntervalMs()
        != other.getCompressionIntervalMs()) return false;
    if (getBytesPerCompression()
        != other.getBytesPerCompression()) return false;
    if (hasTaskId() != other.hasTaskId()) return false;
    if (hasTaskId()) {
      if (!getTaskId()
          .equals(other.getTaskId())) return false;
    }
    if (!getBlackListList()
        .equals(other.getBlackListList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CATALOG_FIELD_NUMBER;
    hash = (53 * hash) + getCatalog().hashCode();
    hash = (37 * hash) + SCHEMA_FIELD_NUMBER;
    hash = (53 * hash) + getSchema().hashCode();
    if (getTablesCount() > 0) {
      hash = (37 * hash) + TABLES_FIELD_NUMBER;
      hash = (53 * hash) + getTablesList().hashCode();
    }
    hash = (37 * hash) + FILE_PATH_FIELD_NUMBER;
    hash = (53 * hash) + getFilePath().hashCode();
    hash = (37 * hash) + FILE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getFileName().hashCode();
    if (hasMinTimestampMs()) {
      hash = (37 * hash) + MIN_TIMESTAMP_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMinTimestampMs());
    }
    if (hasMaxTimestampMs()) {
      hash = (37 * hash) + MAX_TIMESTAMP_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMaxTimestampMs());
    }
    hash = (37 * hash) + COMPRESSION_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + compressionType_;
    hash = (37 * hash) + COMPRESSION_LEVEL_FIELD_NUMBER;
    hash = (53 * hash) + getCompressionLevel();
    hash = (37 * hash) + COMPRESSION_INTERVAL_MS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCompressionIntervalMs());
    hash = (37 * hash) + BYTES_PER_COMPRESSION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getBytesPerCompression());
    if (hasTaskId()) {
      hash = (37 * hash) + TASK_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTaskId().hashCode();
    }
    if (getBlackListCount() > 0) {
      hash = (37 * hash) + BLACK_LIST_FIELD_NUMBER;
      hash = (53 * hash) + getBlackListList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.greptime.export.DataExportRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.greptime.export.DataExportRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.greptime.export.DataExportRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.greptime.export.DataExportRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.greptime.export.DataExportRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.greptime.export.DataExportRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.greptime.export.DataExportRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.greptime.export.DataExportRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.greptime.export.DataExportRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.greptime.export.DataExportRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.greptime.export.DataExportRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.greptime.export.DataExportRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.greptime.export.DataExportRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code DataExportRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:DataExportRequest)
      io.greptime.export.DataExportRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.greptime.export.Export.internal_static_DataExportRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.greptime.export.Export.internal_static_DataExportRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.greptime.export.DataExportRequest.class, io.greptime.export.DataExportRequest.Builder.class);
    }

    // Construct using io.greptime.export.DataExportRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      catalog_ = "";
      schema_ = "";
      tables_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      filePath_ = "";
      fileName_ = "";
      minTimestampMs_ = 0L;
      maxTimestampMs_ = 0L;
      compressionType_ = 0;
      compressionLevel_ = 0;
      compressionIntervalMs_ = 0L;
      bytesPerCompression_ = 0L;
      taskId_ = "";
      blackList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00001000);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.greptime.export.Export.internal_static_DataExportRequest_descriptor;
    }

    @java.lang.Override
    public io.greptime.export.DataExportRequest getDefaultInstanceForType() {
      return io.greptime.export.DataExportRequest.getDefaultInstance();
    }

    @java.lang.Override
    public io.greptime.export.DataExportRequest build() {
      io.greptime.export.DataExportRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.greptime.export.DataExportRequest buildPartial() {
      io.greptime.export.DataExportRequest result = new io.greptime.export.DataExportRequest(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.greptime.export.DataExportRequest result) {
      if (((bitField0_ & 0x00000004) != 0)) {
        tables_ = tables_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.tables_ = tables_;
      if (((bitField0_ & 0x00001000) != 0)) {
        blackList_ = blackList_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00001000);
      }
      result.blackList_ = blackList_;
    }

    private void buildPartial0(io.greptime.export.DataExportRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.catalog_ = catalog_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.schema_ = schema_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.filePath_ = filePath_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.fileName_ = fileName_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.minTimestampMs_ = minTimestampMs_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.maxTimestampMs_ = maxTimestampMs_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.compressionType_ = compressionType_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.compressionLevel_ = compressionLevel_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.compressionIntervalMs_ = compressionIntervalMs_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.bytesPerCompression_ = bytesPerCompression_;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.taskId_ = taskId_;
        to_bitField0_ |= 0x00000004;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.greptime.export.DataExportRequest) {
        return mergeFrom((io.greptime.export.DataExportRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.greptime.export.DataExportRequest other) {
      if (other == io.greptime.export.DataExportRequest.getDefaultInstance()) return this;
      if (!other.getCatalog().isEmpty()) {
        catalog_ = other.catalog_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getSchema().isEmpty()) {
        schema_ = other.schema_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.tables_.isEmpty()) {
        if (tables_.isEmpty()) {
          tables_ = other.tables_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureTablesIsMutable();
          tables_.addAll(other.tables_);
        }
        onChanged();
      }
      if (!other.getFilePath().isEmpty()) {
        filePath_ = other.filePath_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getFileName().isEmpty()) {
        fileName_ = other.fileName_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (other.hasMinTimestampMs()) {
        setMinTimestampMs(other.getMinTimestampMs());
      }
      if (other.hasMaxTimestampMs()) {
        setMaxTimestampMs(other.getMaxTimestampMs());
      }
      if (other.compressionType_ != 0) {
        setCompressionTypeValue(other.getCompressionTypeValue());
      }
      if (other.getCompressionLevel() != 0) {
        setCompressionLevel(other.getCompressionLevel());
      }
      if (other.getCompressionIntervalMs() != 0L) {
        setCompressionIntervalMs(other.getCompressionIntervalMs());
      }
      if (other.getBytesPerCompression() != 0L) {
        setBytesPerCompression(other.getBytesPerCompression());
      }
      if (other.hasTaskId()) {
        taskId_ = other.taskId_;
        bitField0_ |= 0x00000800;
        onChanged();
      }
      if (!other.blackList_.isEmpty()) {
        if (blackList_.isEmpty()) {
          blackList_ = other.blackList_;
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          ensureBlackListIsMutable();
          blackList_.addAll(other.blackList_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              catalog_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              schema_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureTablesIsMutable();
              tables_.add(s);
              break;
            } // case 26
            case 34: {
              filePath_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              fileName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 48: {
              minTimestampMs_ = input.readInt64();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              maxTimestampMs_ = input.readInt64();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              compressionType_ = input.readEnum();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 72: {
              compressionLevel_ = input.readInt32();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            case 80: {
              compressionIntervalMs_ = input.readUInt64();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            case 88: {
              bytesPerCompression_ = input.readUInt64();
              bitField0_ |= 0x00000400;
              break;
            } // case 88
            case 98: {
              taskId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000800;
              break;
            } // case 98
            case 106: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureBlackListIsMutable();
              blackList_.add(s);
              break;
            } // case 106
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object catalog_ = "";
    /**
     * <code>string catalog = 1;</code>
     * @return The catalog.
     */
    public java.lang.String getCatalog() {
      java.lang.Object ref = catalog_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        catalog_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string catalog = 1;</code>
     * @return The bytes for catalog.
     */
    public com.google.protobuf.ByteString
        getCatalogBytes() {
      java.lang.Object ref = catalog_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        catalog_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string catalog = 1;</code>
     * @param value The catalog to set.
     * @return This builder for chaining.
     */
    public Builder setCatalog(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      catalog_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>string catalog = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearCatalog() {
      catalog_ = getDefaultInstance().getCatalog();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>string catalog = 1;</code>
     * @param value The bytes for catalog to set.
     * @return This builder for chaining.
     */
    public Builder setCatalogBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      catalog_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object schema_ = "";
    /**
     * <code>string schema = 2;</code>
     * @return The schema.
     */
    public java.lang.String getSchema() {
      java.lang.Object ref = schema_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        schema_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string schema = 2;</code>
     * @return The bytes for schema.
     */
    public com.google.protobuf.ByteString
        getSchemaBytes() {
      java.lang.Object ref = schema_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        schema_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string schema = 2;</code>
     * @param value The schema to set.
     * @return This builder for chaining.
     */
    public Builder setSchema(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      schema_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>string schema = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearSchema() {
      schema_ = getDefaultInstance().getSchema();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>string schema = 2;</code>
     * @param value The bytes for schema to set.
     * @return This builder for chaining.
     */
    public Builder setSchemaBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      schema_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList tables_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureTablesIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        tables_ = new com.google.protobuf.LazyStringArrayList(tables_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <code>repeated string tables = 3;</code>
     * @return A list containing the tables.
     */
    public com.google.protobuf.ProtocolStringList
        getTablesList() {
      return tables_.getUnmodifiableView();
    }
    /**
     * <code>repeated string tables = 3;</code>
     * @return The count of tables.
     */
    public int getTablesCount() {
      return tables_.size();
    }
    /**
     * <code>repeated string tables = 3;</code>
     * @param index The index of the element to return.
     * @return The tables at the given index.
     */
    public java.lang.String getTables(int index) {
      return tables_.get(index);
    }
    /**
     * <code>repeated string tables = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tables at the given index.
     */
    public com.google.protobuf.ByteString
        getTablesBytes(int index) {
      return tables_.getByteString(index);
    }
    /**
     * <code>repeated string tables = 3;</code>
     * @param index The index to set the value at.
     * @param value The tables to set.
     * @return This builder for chaining.
     */
    public Builder setTables(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureTablesIsMutable();
      tables_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string tables = 3;</code>
     * @param value The tables to add.
     * @return This builder for chaining.
     */
    public Builder addTables(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureTablesIsMutable();
      tables_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string tables = 3;</code>
     * @param values The tables to add.
     * @return This builder for chaining.
     */
    public Builder addAllTables(
        java.lang.Iterable<java.lang.String> values) {
      ensureTablesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, tables_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string tables = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearTables() {
      tables_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string tables = 3;</code>
     * @param value The bytes of the tables to add.
     * @return This builder for chaining.
     */
    public Builder addTablesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureTablesIsMutable();
      tables_.add(value);
      onChanged();
      return this;
    }

    private java.lang.Object filePath_ = "";
    /**
     * <pre>
     *&#47; The file path to export data.
     * </pre>
     *
     * <code>string file_path = 4;</code>
     * @return The filePath.
     */
    public java.lang.String getFilePath() {
      java.lang.Object ref = filePath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filePath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *&#47; The file path to export data.
     * </pre>
     *
     * <code>string file_path = 4;</code>
     * @return The bytes for filePath.
     */
    public com.google.protobuf.ByteString
        getFilePathBytes() {
      java.lang.Object ref = filePath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *&#47; The file path to export data.
     * </pre>
     *
     * <code>string file_path = 4;</code>
     * @param value The filePath to set.
     * @return This builder for chaining.
     */
    public Builder setFilePath(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      filePath_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The file path to export data.
     * </pre>
     *
     * <code>string file_path = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearFilePath() {
      filePath_ = getDefaultInstance().getFilePath();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The file path to export data.
     * </pre>
     *
     * <code>string file_path = 4;</code>
     * @param value The bytes for filePath to set.
     * @return This builder for chaining.
     */
    public Builder setFilePathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      filePath_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object fileName_ = "";
    /**
     * <pre>
     *&#47; The name of the zip file to export.
     * </pre>
     *
     * <code>string file_name = 5;</code>
     * @return The fileName.
     */
    public java.lang.String getFileName() {
      java.lang.Object ref = fileName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *&#47; The name of the zip file to export.
     * </pre>
     *
     * <code>string file_name = 5;</code>
     * @return The bytes for fileName.
     */
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      java.lang.Object ref = fileName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *&#47; The name of the zip file to export.
     * </pre>
     *
     * <code>string file_name = 5;</code>
     * @param value The fileName to set.
     * @return This builder for chaining.
     */
    public Builder setFileName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      fileName_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The name of the zip file to export.
     * </pre>
     *
     * <code>string file_name = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearFileName() {
      fileName_ = getDefaultInstance().getFileName();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The name of the zip file to export.
     * </pre>
     *
     * <code>string file_name = 5;</code>
     * @param value The bytes for fileName to set.
     * @return This builder for chaining.
     */
    public Builder setFileNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      fileName_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private long minTimestampMs_ ;
    /**
     * <pre>
     *&#47; The min timestamp of the data to export.
     * </pre>
     *
     * <code>optional int64 min_timestamp_ms = 6;</code>
     * @return Whether the minTimestampMs field is set.
     */
    @java.lang.Override
    public boolean hasMinTimestampMs() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     *&#47; The min timestamp of the data to export.
     * </pre>
     *
     * <code>optional int64 min_timestamp_ms = 6;</code>
     * @return The minTimestampMs.
     */
    @java.lang.Override
    public long getMinTimestampMs() {
      return minTimestampMs_;
    }
    /**
     * <pre>
     *&#47; The min timestamp of the data to export.
     * </pre>
     *
     * <code>optional int64 min_timestamp_ms = 6;</code>
     * @param value The minTimestampMs to set.
     * @return This builder for chaining.
     */
    public Builder setMinTimestampMs(long value) {
      
      minTimestampMs_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The min timestamp of the data to export.
     * </pre>
     *
     * <code>optional int64 min_timestamp_ms = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearMinTimestampMs() {
      bitField0_ = (bitField0_ & ~0x00000020);
      minTimestampMs_ = 0L;
      onChanged();
      return this;
    }

    private long maxTimestampMs_ ;
    /**
     * <pre>
     *&#47; The max timestamp of the data to export.
     * </pre>
     *
     * <code>optional int64 max_timestamp_ms = 7;</code>
     * @return Whether the maxTimestampMs field is set.
     */
    @java.lang.Override
    public boolean hasMaxTimestampMs() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     *&#47; The max timestamp of the data to export.
     * </pre>
     *
     * <code>optional int64 max_timestamp_ms = 7;</code>
     * @return The maxTimestampMs.
     */
    @java.lang.Override
    public long getMaxTimestampMs() {
      return maxTimestampMs_;
    }
    /**
     * <pre>
     *&#47; The max timestamp of the data to export.
     * </pre>
     *
     * <code>optional int64 max_timestamp_ms = 7;</code>
     * @param value The maxTimestampMs to set.
     * @return This builder for chaining.
     */
    public Builder setMaxTimestampMs(long value) {
      
      maxTimestampMs_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The max timestamp of the data to export.
     * </pre>
     *
     * <code>optional int64 max_timestamp_ms = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxTimestampMs() {
      bitField0_ = (bitField0_ & ~0x00000040);
      maxTimestampMs_ = 0L;
      onChanged();
      return this;
    }

    private int compressionType_ = 0;
    /**
     * <pre>
     *&#47; The compression type of the exported zip file.
     * </pre>
     *
     * <code>.CompressionType compression_type = 8;</code>
     * @return The enum numeric value on the wire for compressionType.
     */
    @java.lang.Override public int getCompressionTypeValue() {
      return compressionType_;
    }
    /**
     * <pre>
     *&#47; The compression type of the exported zip file.
     * </pre>
     *
     * <code>.CompressionType compression_type = 8;</code>
     * @param value The enum numeric value on the wire for compressionType to set.
     * @return This builder for chaining.
     */
    public Builder setCompressionTypeValue(int value) {
      compressionType_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The compression type of the exported zip file.
     * </pre>
     *
     * <code>.CompressionType compression_type = 8;</code>
     * @return The compressionType.
     */
    @java.lang.Override
    public io.greptime.export.CompressionType getCompressionType() {
      io.greptime.export.CompressionType result = io.greptime.export.CompressionType.forNumber(compressionType_);
      return result == null ? io.greptime.export.CompressionType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *&#47; The compression type of the exported zip file.
     * </pre>
     *
     * <code>.CompressionType compression_type = 8;</code>
     * @param value The compressionType to set.
     * @return This builder for chaining.
     */
    public Builder setCompressionType(io.greptime.export.CompressionType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000080;
      compressionType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The compression type of the exported zip file.
     * </pre>
     *
     * <code>.CompressionType compression_type = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearCompressionType() {
      bitField0_ = (bitField0_ & ~0x00000080);
      compressionType_ = 0;
      onChanged();
      return this;
    }

    private int compressionLevel_ ;
    /**
     * <pre>
     *&#47; The compression level of the exported zip file.
     * </pre>
     *
     * <code>int32 compression_level = 9;</code>
     * @return The compressionLevel.
     */
    @java.lang.Override
    public int getCompressionLevel() {
      return compressionLevel_;
    }
    /**
     * <pre>
     *&#47; The compression level of the exported zip file.
     * </pre>
     *
     * <code>int32 compression_level = 9;</code>
     * @param value The compressionLevel to set.
     * @return This builder for chaining.
     */
    public Builder setCompressionLevel(int value) {
      
      compressionLevel_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The compression level of the exported zip file.
     * </pre>
     *
     * <code>int32 compression_level = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearCompressionLevel() {
      bitField0_ = (bitField0_ & ~0x00000100);
      compressionLevel_ = 0;
      onChanged();
      return this;
    }

    private long compressionIntervalMs_ ;
    /**
     * <pre>
     *&#47; Compressing a certain amount of data. Because the main CPU cost of data
     * / export comes from compression.
     * / How long to sleep after each compression of data.
     * </pre>
     *
     * <code>uint64 compression_interval_ms = 10;</code>
     * @return The compressionIntervalMs.
     */
    @java.lang.Override
    public long getCompressionIntervalMs() {
      return compressionIntervalMs_;
    }
    /**
     * <pre>
     *&#47; Compressing a certain amount of data. Because the main CPU cost of data
     * / export comes from compression.
     * / How long to sleep after each compression of data.
     * </pre>
     *
     * <code>uint64 compression_interval_ms = 10;</code>
     * @param value The compressionIntervalMs to set.
     * @return This builder for chaining.
     */
    public Builder setCompressionIntervalMs(long value) {
      
      compressionIntervalMs_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; Compressing a certain amount of data. Because the main CPU cost of data
     * / export comes from compression.
     * / How long to sleep after each compression of data.
     * </pre>
     *
     * <code>uint64 compression_interval_ms = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearCompressionIntervalMs() {
      bitField0_ = (bitField0_ & ~0x00000200);
      compressionIntervalMs_ = 0L;
      onChanged();
      return this;
    }

    private long bytesPerCompression_ ;
    /**
     * <pre>
     *&#47; The number of bytes to compress at a time.
     * </pre>
     *
     * <code>uint64 bytes_per_compression = 11;</code>
     * @return The bytesPerCompression.
     */
    @java.lang.Override
    public long getBytesPerCompression() {
      return bytesPerCompression_;
    }
    /**
     * <pre>
     *&#47; The number of bytes to compress at a time.
     * </pre>
     *
     * <code>uint64 bytes_per_compression = 11;</code>
     * @param value The bytesPerCompression to set.
     * @return This builder for chaining.
     */
    public Builder setBytesPerCompression(long value) {
      
      bytesPerCompression_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The number of bytes to compress at a time.
     * </pre>
     *
     * <code>uint64 bytes_per_compression = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearBytesPerCompression() {
      bitField0_ = (bitField0_ & ~0x00000400);
      bytesPerCompression_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object taskId_ = "";
    /**
     * <pre>
     *&#47; The ID of the continuous incremental data export task. If empty, it is a
     * / normal data export task. If not empty, it is a continuous incremental
     * / data export task.
     * </pre>
     *
     * <code>optional string task_id = 12;</code>
     * @return Whether the taskId field is set.
     */
    public boolean hasTaskId() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     *&#47; The ID of the continuous incremental data export task. If empty, it is a
     * / normal data export task. If not empty, it is a continuous incremental
     * / data export task.
     * </pre>
     *
     * <code>optional string task_id = 12;</code>
     * @return The taskId.
     */
    public java.lang.String getTaskId() {
      java.lang.Object ref = taskId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        taskId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *&#47; The ID of the continuous incremental data export task. If empty, it is a
     * / normal data export task. If not empty, it is a continuous incremental
     * / data export task.
     * </pre>
     *
     * <code>optional string task_id = 12;</code>
     * @return The bytes for taskId.
     */
    public com.google.protobuf.ByteString
        getTaskIdBytes() {
      java.lang.Object ref = taskId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        taskId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *&#47; The ID of the continuous incremental data export task. If empty, it is a
     * / normal data export task. If not empty, it is a continuous incremental
     * / data export task.
     * </pre>
     *
     * <code>optional string task_id = 12;</code>
     * @param value The taskId to set.
     * @return This builder for chaining.
     */
    public Builder setTaskId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      taskId_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The ID of the continuous incremental data export task. If empty, it is a
     * / normal data export task. If not empty, it is a continuous incremental
     * / data export task.
     * </pre>
     *
     * <code>optional string task_id = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearTaskId() {
      taskId_ = getDefaultInstance().getTaskId();
      bitField0_ = (bitField0_ & ~0x00000800);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The ID of the continuous incremental data export task. If empty, it is a
     * / normal data export task. If not empty, it is a continuous incremental
     * / data export task.
     * </pre>
     *
     * <code>optional string task_id = 12;</code>
     * @param value The bytes for taskId to set.
     * @return This builder for chaining.
     */
    public Builder setTaskIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      taskId_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList blackList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureBlackListIsMutable() {
      if (!((bitField0_ & 0x00001000) != 0)) {
        blackList_ = new com.google.protobuf.LazyStringArrayList(blackList_);
        bitField0_ |= 0x00001000;
       }
    }
    /**
     * <pre>
     *&#47; The tables are prohibited from exporting.
     * </pre>
     *
     * <code>repeated string black_list = 13;</code>
     * @return A list containing the blackList.
     */
    public com.google.protobuf.ProtocolStringList
        getBlackListList() {
      return blackList_.getUnmodifiableView();
    }
    /**
     * <pre>
     *&#47; The tables are prohibited from exporting.
     * </pre>
     *
     * <code>repeated string black_list = 13;</code>
     * @return The count of blackList.
     */
    public int getBlackListCount() {
      return blackList_.size();
    }
    /**
     * <pre>
     *&#47; The tables are prohibited from exporting.
     * </pre>
     *
     * <code>repeated string black_list = 13;</code>
     * @param index The index of the element to return.
     * @return The blackList at the given index.
     */
    public java.lang.String getBlackList(int index) {
      return blackList_.get(index);
    }
    /**
     * <pre>
     *&#47; The tables are prohibited from exporting.
     * </pre>
     *
     * <code>repeated string black_list = 13;</code>
     * @param index The index of the value to return.
     * @return The bytes of the blackList at the given index.
     */
    public com.google.protobuf.ByteString
        getBlackListBytes(int index) {
      return blackList_.getByteString(index);
    }
    /**
     * <pre>
     *&#47; The tables are prohibited from exporting.
     * </pre>
     *
     * <code>repeated string black_list = 13;</code>
     * @param index The index to set the value at.
     * @param value The blackList to set.
     * @return This builder for chaining.
     */
    public Builder setBlackList(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureBlackListIsMutable();
      blackList_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The tables are prohibited from exporting.
     * </pre>
     *
     * <code>repeated string black_list = 13;</code>
     * @param value The blackList to add.
     * @return This builder for chaining.
     */
    public Builder addBlackList(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureBlackListIsMutable();
      blackList_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The tables are prohibited from exporting.
     * </pre>
     *
     * <code>repeated string black_list = 13;</code>
     * @param values The blackList to add.
     * @return This builder for chaining.
     */
    public Builder addAllBlackList(
        java.lang.Iterable<java.lang.String> values) {
      ensureBlackListIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, blackList_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The tables are prohibited from exporting.
     * </pre>
     *
     * <code>repeated string black_list = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearBlackList() {
      blackList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00001000);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *&#47; The tables are prohibited from exporting.
     * </pre>
     *
     * <code>repeated string black_list = 13;</code>
     * @param value The bytes of the blackList to add.
     * @return This builder for chaining.
     */
    public Builder addBlackListBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureBlackListIsMutable();
      blackList_.add(value);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:DataExportRequest)
  }

  // @@protoc_insertion_point(class_scope:DataExportRequest)
  private static final io.greptime.export.DataExportRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.greptime.export.DataExportRequest();
  }

  public static io.greptime.export.DataExportRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DataExportRequest>
      PARSER = new com.google.protobuf.AbstractParser<DataExportRequest>() {
    @java.lang.Override
    public DataExportRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DataExportRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DataExportRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.greptime.export.DataExportRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

